# This is the main netsync configuration file.
# It contains the configuration directives that give netsync its instructions.


[netsync]

# Probe1Cache specifies where probe level 1 RFC1035 output is stored.
# default: /var/cache/netsync/dns.txt
Probe1Cache = /var/cache/netsync/dns.txt

# Probe2Cache specifies where probe level 2 RFC4180 output is stored.
# default: /var/cache/netsync/db.csv
Probe2Cache = /var/cache/netsync/db.csv


[DB]
# See the DBI Perl module documentation for more information.

# DBMS specifies the database platform to use.
# (See additional Database-Specific Settings below.)
# default: <none>
DBMS = 

# Server specifies the server containing the database to use.
# default: <none>
Server = 

# Port specifies which port to contact the database server on.
# default: <none>
Port = 

# Database specifies which database to connect to.
# default: <none>
Database = 

# Username specifies the user to connect to the database as.
# default: <none>
Username = 

# Password specifies the authentication key to use to connect to the database.
# default: <none>
Password = 

## Advanced Settings

# AutoCommit specifies whether database transactions may be rolled back.
# options: 0-1 (active-low)
# default: 0 (DBI default: 1)
AutoCommit = 0

# DSN specifies DBMS-specific instructions like database selection, etc.
# (Multiple instructions may be included as a comma-separated list.)
# default: <none>
DSN = 

# PrintWarn specifies whether database warnings are printed.
# (This value is automatically enabled if Perl warnings are enabled.)
# options: 0-1
# default: 0
PrintWarn = 0

# PrintError specifies whether database errors print warnings for errors.
# options: 0-1
# default: 1
PrintError = 1

# RaiseError specifies whether database errors generate exceptions.
# options: 0-1
# default: 0
RaiseError = 0

# ShowErrorStatement specifies whether the SQL statement is appended to printed warnings.
# options: 0-1
# default: 0
ShowErrorStatement = 0

# TraceLevel specifies what trace information is printed.
# options: 0-15
# default: 0
TraceLevel = 0


[DNS]
# See the Net::DNS Perl module documentation for more information.

# domain specifies the name of the network to search for nodes.
# default: <none>
domain = 

# nameservers specifies the servers to query for nodes.
# default: <none>
nameservers = 

## Advanced Settings

# port specifies which port to contact name servers on using DNS.
# default: 53
port = 53

# searchlist specifies the resolvers list of domains to search while querying.
# default: <domain>
searchlist = 

# recurse specifies whether name servers will be requested to perform a recursive query.
# options: 0-1
# default: 1
recurse = 1

# debug specifies whether calls to search, query, and send print debugging information.
# options: 0-1
# default: 0
debug = 0

# srcaddr specifies the source address from which queries are sent.
# (This is convenient for forcing queries out a specific interface on a multi-homed host.)
# default: 0.0.0.0 (any local address)
srcaddr = 0.0.0.0

# srcport specifies the port from which queries are sent.
# default: 0 (any port)
srcport = 0

# udp_timeout specifies the number of seconds to wait before retrying a query using UDP.
# (If no timeout is set, the retry and retrans settings will be utilized until they are exhausted.)
# default: <none>
udp_timeout = 

# persistent_udp specifies whether a UDP socket will be kept open for each host:port to which it connects.
# (This is useful for making a lot of queries or updates to the same nameserver using UDP.)
# options: 0-1
# default: 0
persistent_udp = 0

# ucevc specifies whether TCP should be used instead of UDP when querying.
# options: 0-1
# default: 0
usevc = 0

# tcp_timeout specifies the number of seconds to wait before retrying a query using TCP.
# default: 120
tcp_timeout = 120

# persistent_tcp specifies whether a TCP socket will be kept open for each host:port to which it connects.
# (This is useful for making a lot of queries or updates to the same nameserver using TCP.)
# options: 0-1
# default: 0
persistent_tcp = 0

# igntc specifies whether truncated packets will be ignored cause the query to be retried using TCP.
# options 0-1
# default: 0
igntc = 0

# retrans specifies the retransmission interval (in seconds).
# default: 5
retrans = 5

# retry specifies how many times a timeout may occur before considering a server unreachable.
# default: 4
retry = 4

# defnames specifies whether calls to query will append the default domain to names that contain no dots.
# options 0-1
# default: 1
defnames = 1

# dnsrch specfies whether calls to search will apply the search list.
# options: 0-1
# default: 1
dnsrch = 1

# dnssec specifies whether to use DNSSEC.
# options: 0-1
# default: 0
dnssec = 0


[Netsync]

# Table specifies which database table to use.
# default: <none>
Table = 

# DeviceField specifies which table field to use as a unique ID for devices.
# default: <none>
DeviceField = 

# InterfaceField specifies which table field to use as a unique ID for device interfaces.
# default: <none>
InterfaceField = 

# InfoFields specifies which table fields to synchronize with device interfaces.
# default: <none>
InfoFields = 

## Advanced Settings

# DeviceOrder specifies the width of fields specifying node and device counts.
# (e.g. 2 allows up to 99 nodes, 4 up to 9999 nodes, etc.)
# default: 4
DeviceOrder = 4

# AlertLog specifies where to log errors and alerts.
# default: /var/log/netsync/netsync.log
AlertLog = /var/log/netsync/netsync.log

# DeviceLog specifies where to log the location of all devices found in the database.
# default: /var/log/netsync/devices.log
DeviceLog = /var/log/netsync/devices.log

# NodeLog specifies where to log all probed nodes.
# default: /var/log/netsync/nodes.log
NodeLog = /var/log/netsync/nodes.log

# UnidentifiedCache specifies where to dump interfaces found while probing in the database that do not correspond to an interface on the actual device.
# default: /var/cache/netsync/unidentified.csv
UnidentifiedCache = /var/cache/netsync/unidentified.csv

# UnrecognizedLog specifies where to log devices found on the network, but not in the database.
# default: /var/log/netsync/unrecognized.log
UnrecognizedLog = /var/log/netsync/unrecognized.log

# DeviceLog specifies where to log all modifications made to the network by netsync.
# default: /var/log/netsync/updates.log
UpdateLog = /var/log/netsync/updates.log

# SyncOID specifies which OID to send synchronized information to when updating.
# default: ifAlias
SyncOID = ifAlias


[SNMP]
# See the SNMP Perl module documentation for more information.

# Version specifies which SNMP version to use.
# (See additional Version-Specific Settings below.)
# options: 1, 2, 3
# default: 3
Version = 3

## Version-Specific Settings

# RetryNoSuch specifies whether automatic repairs are attempted on SNMPv1 queries that return NOSUCH errors.
# options: 0-1
# default: 0
RetryNoSuch = 0

# Community specifies the SNMPv2 community string.
# default: public
Community = public

# SecLevel specifies which SNMPv3 security features to use.
# options: noAuthNoPriv, authNoPriv, authPriv
# default: noAuthNoPriv
SecLevel = noAuthNoPriv

# AuthProto specifies which SNMPv3 authentication algorithm to use.
# options: MD5, SHA
# default: MD5
AuthProto = MD5

# PrivProto specifies which SNMPv3 privacy algorithm to use.
# options: DES, AES
# default: DES
PrivProto = DES

# SecName specifies the SNMPv3 username.
# default: initial
SecName = initial

# AuthPass specifies the SNMPv3 authentication (access) key.
# default: <none>
AuthPass = 

# PrivPass specifies the SNMPv3 privacy (encryption) key.
# default: <none>
PrivPass = 

# SecEngineId specifies the SNMPv3 security engine ID.
# (This value will be automatically detected if not supplied.)
# default: <none>
SecEngineId = 

# ContextEngineId specifies the SNMPv3 context engine ID.
# default: <SecEngineId>
ContextEngineId = 

# Context specifies the SNMPv3 context.
# default: <none>
Context = 

## Advanced Settings

# RemotePort specifies which port to contact nodes on using SNMP.
# default: 161
RemotePort = 161

# Timeout specifies how many microseconds to wait before retrying an unresponsive node.
# default: 1000000
Timeout = 1000000

# Retries specifies how many times a timeout may occur before considering a node inactive.
# default: 5
Retries = 5

# MIBdir specifies the location of MIBs required by netsync.
# default: /usr/lib/netsync/mib
MIBdir = /usr/lib/netsync/mib
